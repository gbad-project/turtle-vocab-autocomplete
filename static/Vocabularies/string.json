{
  "iri": "http://www.w3.org/2000/10/swap/string#",
  "description": "String Processing Ontology",
  "label": "Semantic Web Application Platform - String",
  "prefix": "string",
  "items": {
    "String": {
      "category": "class",
      "label": "string"
    },
    "contains": {
      "category": "property",
      "description": "True iff the subject string contains the object string.",
      "label": "contains"
    },
    "containsIgnoringCase": {
      "category": "property",
      "description": "True iff the subject string contains the object string, with the comparison done ignoring the difference between upper case and lower case characters.",
      "label": "contains"
    },
    "endsWith": {
      "category": "property",
      "description": "True iff the subject string ends with the object string.",
      "label": "ends with"
    },
    "equalIgnoringCase": {
      "category": "property",
      "description": "True iff the subject string is the same as object string ignoring differences between upper and lower case.",
      "label": "contains"
    },
    "greaterThan": {
      "category": "property",
      "description": "True iff the string is greater than the object when ordered according to Unicode(tm) code order.",
      "label": "is greater than"
    },
    "lessThan": {
      "category": "property",
      "description": "True iff the string is less than the object when ordered according to Unicode(tm) code order.",
      "label": "is less than"
    },
    "matches": {
      "category": "property",
      "description": "The subject is a string; the object is is a regular expression in the perl, python style. It is true iff the string matches the regexp.",
      "label": "contains"
    },
    "notEqualIgnoringCase": {
      "category": "property",
      "description": "True iff the subject string is the NOT same as object string ignoring differences between upper and lower case.",
      "label": "contains"
    },
    "notGreaterThan": {
      "category": "property",
      "description": "True iff the string is NOT greater than the object when ordered according to Unicode(tm) code order.",
      "label": "is not greater than"
    },
    "notLessThan": {
      "category": "property",
      "description": "True iff the string is NOT less than the object when ordered according to Unicode(tm) code order.",
      "label": "is not less than"
    },
    "notMatches": {
      "category": "property",
      "description": "The subject string; the object is is a regular expression in the perl, python style. It is true iff the string does NOT match the regexp.",
      "label": "contains"
    },
    "replace": {
      "category": "property",
      "description": "A built-in for replacing characters or sub. takes a list of 3 strings; the first is the input data, the second the old and the third the new string. The object is calculated as the rplaced string. For example, (\"fofof bar\", \"of\", \"baz\") string:replace \"fbazbaz bar\"",
      "label": "replace"
    },
    "scrape": {
      "category": "property",
      "description": "The subject is a list of two strings. The second string is a regular expression in the perl, python style. It must contain one group (a part in parentheses).  If the first string in the list matches the regular expression, then the object is calculated as being the part of the first string which matches the group.",
      "label": "scrape"
    },
    "startsWith": {
      "category": "property",
      "description": "True iff the subject string starts with the object string.",
      "label": "starts with"
    }
  }
}